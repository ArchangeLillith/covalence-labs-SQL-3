DROP SCHEMA IF EXISTS sp_cat_lab;
CREATE SCHEMA sp_cat_lab;
USE sp_cat_lab;

CREATE TABLE customers (
    id INT AUTO_INCREMENT,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    PRIMARY KEY (id)
);

CREATE TABLE orders (
    id INT AUTO_INCREMENT,
    customer_id INT,
    product_name VARCHAR(100),
    quantity INT,
    PRIMARY KEY (id),
    FOREIGN KEY (customer_id) REFERENCES customers (id)
);

INSERT INTO customers (first_name, last_name, email)
VALUES
('Whiskers', 'McMeow', 'whiskers.mcmeow@catmail.com'),
('Fluffy', 'Purrington', 'fluffy.purrington@catmail.com'),
('Mittens', 'Clawson', 'mittens.clawson@catmail.com'),
('Shadow', 'Hissster', 'shadow.hissster@catmail.com'),
('Luna', 'Tailsworth', 'luna.tailsworth@catmail.com');

INSERT INTO orders (customer_id, product_name, quantity)
VALUES
(1, 'Catnip Toy', 2),
(1, 'Scratching Post', 1),
(1, 'Fish-shaped Food Bowl', 1),
(2, 'Catnip Toy', 3),
(2, 'Soft Bed', 1),
(2, 'Mouse Plush', 3),
(3, 'Mouse Plush', 4),
(3, 'Cat Collar with Bell', 1),
(3, 'Tuna Treats Pack', 2),
(4, 'Laser Pointer Toy', 1),
(4, 'Soft Bed', 2),
(4, 'Kitty Litter Scooper', 1),
(5, 'Sisal Ball', 3),
(5, 'Mouse Plush', 2),
(5, 'Catnip Pouch', 2);

DELIMITER $$
DROP PROCEDURE IF EXISTS get_customer_orders $$
CREATE PROCEDURE get_customer_orders(IN c_id INT)
BEGIN
	SELECT product_name, quantity 
    FROM orders
    WHERE customer_id = c_id;
END $$
DELIMITER ;

CALL get_customer_orders(2);

DELIMITER $$
DROP PROCEDURE IF EXISTS add_new_order $$
CREATE PROCEDURE add_new_order(IN c_id INT, IN prod_name VARCHAR(100), IN quant INT)
BEGIN
	INSERT INTO orders (customer_id, product_name, quantity)
    VALUE (c_id, prod_name, quant);
END $$
DELIMITER ;

CALL add_new_order(1, 'Catnip Toy', 3);
SELECT * FROM orders;

DELIMITER $$
DROP PROCEDURE IF EXISTS delete_order $$
CREATE PROCEDURE delete_order(IN order_id INT)
BEGIN
	DELETE FROM orders WHERE id = order_id;
END $$
DELIMITER ;

CALL delete_order(3);
SELECT * FROM orders;

DELIMITER $$
DROP PROCEDURE IF EXISTS find_customers_by_product  $$
CREATE PROCEDURE find_customers_by_product (IN prod_name VARCHAR(100))
BEGIN
	SELECT 
		customers.id,
        orders.product_name,
        orders.quantity
	FROM orders
    JOIN customers ON orders.customer_id = customers.id
    WHERE orders.product_name = prod_name;
END $$
DELIMITER ;

CALL find_customers_by_product ('Catnip Toy');
SELECT * FROM orders;


